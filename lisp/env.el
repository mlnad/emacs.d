;;; env.el --- enviroment variables -*- lexical-binding: t; -*-
;;
;; Copyright (C) 2023 刘邈
;;
;; Author: 刘邈 <liumiaogemini@foxmail.com>
;; Maintainer: 刘邈 <liumiaogemini@foxmail.com>
;; Created: 十月 29, 2023
;; Modified: 十月 29, 2023
;; Version: 0.0.1
;; Keywords: Symbol’s value as variable is void: finder-known-keywords
;; Homepage: https://github.com/liu/env
;; Package-Requires: ((emacs "24.3"))
;;
;; This file is not part of GNU Emacs.
;;
;;; Commentary:
;;
;;  enviroment variables
;;
;;; Code:
(defvar env/deny
  '(;; Unix/shell state that shouldn't be persisted
    "^HOME$" "^\\(OLD\\)?PWD$" "^SHLVL$" "^PS1$" "^R?PROMPT$" "^TERM\\(CAP\\)?$"
    "^USER$" "^GIT_CONFIG" "^INSIDE_EMACS$"
    ;; X server, Wayland, or services' env  that shouldn't be persisted
    "^DISPLAY$" "^WAYLAND_DISPLAY" "^DBUS_SESSION_BUS_ADDRESS$" "^XAUTHORITY$"
    ;; Windows+WSL envvars that shouldn't be persisted
    "^WSL_INTEROP$"
    ;; XDG variables that are best not persisted.
    "^XDG_CURRENT_DESKTOP$" "^XDG_RUNTIME_DIR$"
    "^XDG_\\(VTNR\\|SEAT\\|SESSION_\\(TYPE\\|CLASS\\)\\)"
    ;; Socket envvars, like I3SOCK, GREETD_SOCK, SEATD_SOCK, SWAYSOCK, etc.
    "SOCK$"
    ;; ssh and gpg variables that could quickly become stale if persisted.
    "^SSH_\\(AUTH_SOCK\\|AGENT_PID\\)$" "^\\(SSH\\|GPG\\)_TTY$"
    "^GPG_AGENT_INFO$"
    ;; Internal Doom envvars
    "^DEBUG$" "^INSECURE$" "^\\(EMACS\\|DOOM\\)DIR$" "^DOOMPROFILE$" "^__"))

(defun env/genreate-env-file ()
  (interactive)
  (let ((env-file configs/env-file))
    (with-temp-buffer env-file
                      (setq-local coding-system-for-write 'utf-8-unix)
                      (goto-char (point-min))
                      (insert
                       ";; -*- mode: lisp-interaction; coding: utf-8-unix; -*-\n"
                       ";; ---------------------------------------------------------------------------\n"
                       ";; This file was auto-generated by emacs. It contains a list of environment\n"
                       ";; variables scraped from your default shell.\n"
                       ";;\n"
                       ";; DO NOT EDIT THIS FILE!\n"
                       ";;\n")
                      (insert "(")
                      (dolist (env (get 'process-environment 'initial-value))
                        (insert (prin1-to-string env) "\n "))
                      (insert ")"))))

(provide 'env)
;;; env.el ends here
